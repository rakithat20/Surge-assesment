name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker images
        run: |
          docker-compose -f docker-compose.yml build

      - name: Push Docker images (optional)
        if: success()
        run: |
          docker tag frontend mydockerhub/frontend:latest
          docker tag backend mydockerhub/backend:latest
          docker push mydockerhub/frontend:latest
          docker push mydockerhub/backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Deploy to DigitalOcean
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.DIGITALOCEAN_SSH_KEY }} user@your-droplet-ip "
          cd /path/to/your/app &&
          git pull origin main &&
          docker-compose -f docker-compose.yml down &&
          docker-compose -f docker-compose.yml up -d"
